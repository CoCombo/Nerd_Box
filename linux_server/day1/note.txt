为什么TCP/IP协议栈要放在linux内核中：因为协议在收包发包时需要大量的操作网卡，如果把协议放到用户空间，要频繁中断调用内核极大降低了效率
linux应用开发：写一个服务框架，能够顺利承受多线程多线程的访问，并建立多个长连接基本找工作没问题。
		1.多进程多线程机制
		2.进程锁线程锁（同步和互斥――信号量的两种用法）
		3.进程间通讯（共享内存，socket，消息队列）
		――――》死的知识
		4.报文打包机制（自定义）
		5.TCP/IP的深入编程：tcp/ip深入分析（粘包无边界，连接数，5种服务器模型）
		――――》商业代码级别的服务框架


内核为每一个进程虚拟了内存空间。为了让n个进程有效的访问内存。
逻辑地址映射到物理地址通过段式管理和页式管理

fork()进程，一次调用两次返回，本质是linux内核让两个进程在各自的内存空间中返回
子进程会拷贝父进程的东西，拷贝了哪些东西？如何拷贝？：代码，堆栈，数据段，进程控制块（PCB，其中包含进程的状态）
进程是操作系统对资源的抽象，一个进程包含：数据段，堆栈段，代码，进程控制块（PCB）
PCB是操作系统感知进程的重要数据结构（CPU通过PCB控制进程）

父进程创建子进程时的拷贝是写时拷贝，即只有当子进程要对内存变量进行修改时才进行拷贝
ubuntu系统中父进程先结束子进程不会托付给1号进程，ubuntu系统默认采用upstart作为init系统，echo $UPSTART_SESSION可查看